<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PatchAppRequest
 *
 * Generated from protobuf message <code>clarifai.api.PatchAppRequest</code>
 */
class PatchAppRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * Generated from protobuf field <code>.clarifai.api.App app = 2;</code>
     */
    protected $app = null;
    /**
     * The action to perform on the patched App object except App.Metadata
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the app image by setting
     * 'image.url' in the request to the current value returned for the app.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     */
    protected $action = '';
    /**
     * The action to perform on the patched App.Metadata
     *
     * Generated from protobuf field <code>.clarifai.api.PatchAction metadata_action = 4;</code>
     */
    protected $metadata_action = null;
    /**
     * If set, the app will be automatically reindexed upon change of its base workflow.
     *
     * Generated from protobuf field <code>bool reindex = 5;</code>
     */
    protected $reindex = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type \Clarifai\Api\App $app
     *     @type string $action
     *           The action to perform on the patched App object except App.Metadata
     *           Supported values: 'overwrite' and 'remove'.
     *           Note that 'remove' can only be used to remove the app image by setting
     *           'image.url' in the request to the current value returned for the app.
     *     @type \Clarifai\Api\PatchAction $metadata_action
     *           The action to perform on the patched App.Metadata
     *     @type bool $reindex
     *           If set, the app will be automatically reindexed upon change of its base workflow.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.App app = 2;</code>
     * @return \Clarifai\Api\App|null
     */
    public function getApp()
    {
        return $this->app;
    }

    public function hasApp()
    {
        return isset($this->app);
    }

    public function clearApp()
    {
        unset($this->app);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.App app = 2;</code>
     * @param \Clarifai\Api\App $var
     * @return $this
     */
    public function setApp($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\App::class);
        $this->app = $var;

        return $this;
    }

    /**
     * The action to perform on the patched App object except App.Metadata
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the app image by setting
     * 'image.url' in the request to the current value returned for the app.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     * @return string
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * The action to perform on the patched App object except App.Metadata
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the app image by setting
     * 'image.url' in the request to the current value returned for the app.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkString($var, True);
        $this->action = $var;

        return $this;
    }

    /**
     * The action to perform on the patched App.Metadata
     *
     * Generated from protobuf field <code>.clarifai.api.PatchAction metadata_action = 4;</code>
     * @return \Clarifai\Api\PatchAction|null
     */
    public function getMetadataAction()
    {
        return $this->metadata_action;
    }

    public function hasMetadataAction()
    {
        return isset($this->metadata_action);
    }

    public function clearMetadataAction()
    {
        unset($this->metadata_action);
    }

    /**
     * The action to perform on the patched App.Metadata
     *
     * Generated from protobuf field <code>.clarifai.api.PatchAction metadata_action = 4;</code>
     * @param \Clarifai\Api\PatchAction $var
     * @return $this
     */
    public function setMetadataAction($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\PatchAction::class);
        $this->metadata_action = $var;

        return $this;
    }

    /**
     * If set, the app will be automatically reindexed upon change of its base workflow.
     *
     * Generated from protobuf field <code>bool reindex = 5;</code>
     * @return bool
     */
    public function getReindex()
    {
        return $this->reindex;
    }

    /**
     * If set, the app will be automatically reindexed upon change of its base workflow.
     *
     * Generated from protobuf field <code>bool reindex = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setReindex($var)
    {
        GPBUtil::checkBool($var);
        $this->reindex = $var;

        return $this;
    }

}

