<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api\Visibility;

use UnexpectedValueException;

/**
 * Gettable defined the level of access for GET operations for this resource.
 *
 * Protobuf type <code>clarifai.api.Visibility.Gettable</code>
 */
class Gettable
{
    /**
     * Default value not allowed.
     *
     * Generated from protobuf enum <code>UNKNOWN_VISIBILITY = 0;</code>
     */
    const UNKNOWN_VISIBILITY = 0;
    /**
     * PRIVATE requires collaborator or team permissions in order to GET this resource.
     *
     * Generated from protobuf enum <code>PRIVATE = 10;</code>
     */
    const PBPRIVATE = 10;
    /**
     * ORG requires you to be in the same org in order to GET this resource, but don't have to be a
     * teammate or collaborator.
     *
     * Generated from protobuf enum <code>ORG = 30;</code>
     */
    const ORG = 30;
    /**
     * PUBLIC opens up GET access to the resource to any user on the platform even if they are not
     * a teammate or collaborator.
     *
     * Generated from protobuf enum <code>PUBLIC = 50;</code>
     */
    const PBPUBLIC = 50;

    private static $valueToName = [
        self::UNKNOWN_VISIBILITY => 'UNKNOWN_VISIBILITY',
        self::PBPRIVATE => 'PRIVATE',
        self::ORG => 'ORG',
        self::PBPUBLIC => 'PUBLIC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Gettable::class, \Clarifai\Api\Visibility_Gettable::class);

