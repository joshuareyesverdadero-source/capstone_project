<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * POST new concept relations
 *
 * Generated from protobuf message <code>clarifai.api.PostConceptRelationsRequest</code>
 */
class PostConceptRelationsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The user_id and app_id information.
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * The subject concept id you're going to add relations for.
     *
     * Generated from protobuf field <code>string concept_id = 2;</code>
     */
    protected $concept_id = '';
    /**
     * The relationships you're going to add.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.ConceptRelation concept_relations = 3;</code>
     */
    private $concept_relations;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *           The user_id and app_id information.
     *     @type string $concept_id
     *           The subject concept id you're going to add relations for.
     *     @type array<\Clarifai\Api\ConceptRelation>|\Google\Protobuf\Internal\RepeatedField $concept_relations
     *           The relationships you're going to add.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * The user_id and app_id information.
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * The user_id and app_id information.
     *
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * The subject concept id you're going to add relations for.
     *
     * Generated from protobuf field <code>string concept_id = 2;</code>
     * @return string
     */
    public function getConceptId()
    {
        return $this->concept_id;
    }

    /**
     * The subject concept id you're going to add relations for.
     *
     * Generated from protobuf field <code>string concept_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setConceptId($var)
    {
        GPBUtil::checkString($var, True);
        $this->concept_id = $var;

        return $this;
    }

    /**
     * The relationships you're going to add.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.ConceptRelation concept_relations = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getConceptRelations()
    {
        return $this->concept_relations;
    }

    /**
     * The relationships you're going to add.
     *
     * Generated from protobuf field <code>repeated .clarifai.api.ConceptRelation concept_relations = 3;</code>
     * @param array<\Clarifai\Api\ConceptRelation>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setConceptRelations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\ConceptRelation::class);
        $this->concept_relations = $arr;

        return $this;
    }

}

