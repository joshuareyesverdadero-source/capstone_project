<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#47;///////////////////////////////////////
 * Don't need RunnerSelector if we're opening up endpoints for deployments.
 * ////////////////////////////////////////
 * The RunnerSelector is an optional field we can provide during runtime
 * of model/workflow predictions to specify which particular runner we want to process the work.
 * This can optionally be used to select a particular nodepool and then within that nodepool
 * a particular runner.
 *
 * Generated from protobuf message <code>clarifai.api.RunnerSelector</code>
 */
class RunnerSelector extends \Google\Protobuf\Internal\Message
{
    /**
     * A particular nodepool for the resource to be run within. This request the id and user_id of
     * the nodepool to be specified. Runners will be scaled according to a deployment for the given
     * resource to be run. There should not be more than one deployment in this nodepool for the
     * particular resource to run. If no deployments then default autoscaling will be used.
     *
     * Generated from protobuf field <code>.clarifai.api.Nodepool nodepool = 1;</code>
     */
    protected $nodepool = null;
    /**
     * Optionally a partcular runner within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Runner runner = 2;</code>
     */
    protected $runner = null;
    /**
     * Optionally a partcular deployment within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Deployment deployment = 3;</code>
     */
    protected $deployment = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\Nodepool $nodepool
     *           A particular nodepool for the resource to be run within. This request the id and user_id of
     *           the nodepool to be specified. Runners will be scaled according to a deployment for the given
     *           resource to be run. There should not be more than one deployment in this nodepool for the
     *           particular resource to run. If no deployments then default autoscaling will be used.
     *     @type \Clarifai\Api\Runner $runner
     *           Optionally a partcular runner within the nodepool.
     *     @type \Clarifai\Api\Deployment $deployment
     *           Optionally a partcular deployment within the nodepool.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * A particular nodepool for the resource to be run within. This request the id and user_id of
     * the nodepool to be specified. Runners will be scaled according to a deployment for the given
     * resource to be run. There should not be more than one deployment in this nodepool for the
     * particular resource to run. If no deployments then default autoscaling will be used.
     *
     * Generated from protobuf field <code>.clarifai.api.Nodepool nodepool = 1;</code>
     * @return \Clarifai\Api\Nodepool|null
     */
    public function getNodepool()
    {
        return $this->nodepool;
    }

    public function hasNodepool()
    {
        return isset($this->nodepool);
    }

    public function clearNodepool()
    {
        unset($this->nodepool);
    }

    /**
     * A particular nodepool for the resource to be run within. This request the id and user_id of
     * the nodepool to be specified. Runners will be scaled according to a deployment for the given
     * resource to be run. There should not be more than one deployment in this nodepool for the
     * particular resource to run. If no deployments then default autoscaling will be used.
     *
     * Generated from protobuf field <code>.clarifai.api.Nodepool nodepool = 1;</code>
     * @param \Clarifai\Api\Nodepool $var
     * @return $this
     */
    public function setNodepool($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Nodepool::class);
        $this->nodepool = $var;

        return $this;
    }

    /**
     * Optionally a partcular runner within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Runner runner = 2;</code>
     * @return \Clarifai\Api\Runner|null
     */
    public function getRunner()
    {
        return $this->runner;
    }

    public function hasRunner()
    {
        return isset($this->runner);
    }

    public function clearRunner()
    {
        unset($this->runner);
    }

    /**
     * Optionally a partcular runner within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Runner runner = 2;</code>
     * @param \Clarifai\Api\Runner $var
     * @return $this
     */
    public function setRunner($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Runner::class);
        $this->runner = $var;

        return $this;
    }

    /**
     * Optionally a partcular deployment within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Deployment deployment = 3;</code>
     * @return \Clarifai\Api\Deployment|null
     */
    public function getDeployment()
    {
        return $this->deployment;
    }

    public function hasDeployment()
    {
        return isset($this->deployment);
    }

    public function clearDeployment()
    {
        unset($this->deployment);
    }

    /**
     * Optionally a partcular deployment within the nodepool.
     *
     * Generated from protobuf field <code>.clarifai.api.Deployment deployment = 3;</code>
     * @param \Clarifai\Api\Deployment $var
     * @return $this
     */
    public function setDeployment($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Deployment::class);
        $this->deployment = $var;

        return $this;
    }

}

