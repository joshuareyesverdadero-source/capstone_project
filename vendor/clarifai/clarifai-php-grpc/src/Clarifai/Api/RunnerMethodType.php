<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>clarifai.api.RunnerMethodType</code>
 */
class RunnerMethodType
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * single request, single response. predict() in code
     *
     * Generated from protobuf enum <code>UNARY_UNARY = 1;</code>
     */
    const UNARY_UNARY = 1;
    /**
     * single request, streamed response. generate() in code
     *
     * Generated from protobuf enum <code>UNARY_STREAMING = 2;</code>
     */
    const UNARY_STREAMING = 2;
    /**
     * stream of requests, single response.
     *
     * Generated from protobuf enum <code>STREAMING_UNARY = 3;</code>
     */
    const STREAMING_UNARY = 3;
    /**
     * stream of requests, stream of responses. stream() in code
     *
     * Generated from protobuf enum <code>STREAMING_STREAMING = 4;</code>
     */
    const STREAMING_STREAMING = 4;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::UNARY_UNARY => 'UNARY_UNARY',
        self::UNARY_STREAMING => 'UNARY_STREAMING',
        self::STREAMING_UNARY => 'STREAMING_UNARY',
        self::STREAMING_STREAMING => 'STREAMING_STREAMING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

