<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LabelCount
 *
 * Generated from protobuf message <code>clarifai.api.LabelCount</code>
 */
class LabelCount extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string concept_name = 1 [deprecated = true];</code>
     * @deprecated
     */
    protected $concept_name = '';
    /**
     * Generated from protobuf field <code>uint32 count = 2;</code>
     */
    protected $count = 0;
    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 3;</code>
     */
    protected $concept = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $concept_name
     *     @type int $count
     *     @type \Clarifai\Api\Concept $concept
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string concept_name = 1 [deprecated = true];</code>
     * @return string
     * @deprecated
     */
    public function getConceptName()
    {
        @trigger_error('concept_name is deprecated.', E_USER_DEPRECATED);
        return $this->concept_name;
    }

    /**
     * Generated from protobuf field <code>string concept_name = 1 [deprecated = true];</code>
     * @param string $var
     * @return $this
     * @deprecated
     */
    public function setConceptName($var)
    {
        @trigger_error('concept_name is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkString($var, True);
        $this->concept_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 count = 2;</code>
     * @return int
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Generated from protobuf field <code>uint32 count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 3;</code>
     * @return \Clarifai\Api\Concept|null
     */
    public function getConcept()
    {
        return $this->concept;
    }

    public function hasConcept()
    {
        return isset($this->concept);
    }

    public function clearConcept()
    {
        unset($this->concept);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 3;</code>
     * @param \Clarifai\Api\Concept $var
     * @return $this
     */
    public function setConcept($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Concept::class);
        $this->concept = $var;

        return $this;
    }

}

