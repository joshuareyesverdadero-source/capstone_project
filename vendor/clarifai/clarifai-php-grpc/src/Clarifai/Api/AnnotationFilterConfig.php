<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.AnnotationFilterConfig</code>
 */
class AnnotationFilterConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * The annotation filter that is used.
     *
     * Generated from protobuf field <code>.clarifai.api.AnnotationFilter annotation_filter = 1;</code>
     */
    protected $annotation_filter = null;
    /**
     * If true, empty inputs are not included in the dataset version.
     * If false, empty inputs are included in the dataset version.
     * We define an empty input as an input without any annotations after annotation filter is applied.
     *
     * Generated from protobuf field <code>bool ignore_empty_inputs = 2;</code>
     */
    protected $ignore_empty_inputs = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\AnnotationFilter $annotation_filter
     *           The annotation filter that is used.
     *     @type bool $ignore_empty_inputs
     *           If true, empty inputs are not included in the dataset version.
     *           If false, empty inputs are included in the dataset version.
     *           We define an empty input as an input without any annotations after annotation filter is applied.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The annotation filter that is used.
     *
     * Generated from protobuf field <code>.clarifai.api.AnnotationFilter annotation_filter = 1;</code>
     * @return \Clarifai\Api\AnnotationFilter|null
     */
    public function getAnnotationFilter()
    {
        return $this->annotation_filter;
    }

    public function hasAnnotationFilter()
    {
        return isset($this->annotation_filter);
    }

    public function clearAnnotationFilter()
    {
        unset($this->annotation_filter);
    }

    /**
     * The annotation filter that is used.
     *
     * Generated from protobuf field <code>.clarifai.api.AnnotationFilter annotation_filter = 1;</code>
     * @param \Clarifai\Api\AnnotationFilter $var
     * @return $this
     */
    public function setAnnotationFilter($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\AnnotationFilter::class);
        $this->annotation_filter = $var;

        return $this;
    }

    /**
     * If true, empty inputs are not included in the dataset version.
     * If false, empty inputs are included in the dataset version.
     * We define an empty input as an input without any annotations after annotation filter is applied.
     *
     * Generated from protobuf field <code>bool ignore_empty_inputs = 2;</code>
     * @return bool
     */
    public function getIgnoreEmptyInputs()
    {
        return $this->ignore_empty_inputs;
    }

    /**
     * If true, empty inputs are not included in the dataset version.
     * If false, empty inputs are included in the dataset version.
     * We define an empty input as an input without any annotations after annotation filter is applied.
     *
     * Generated from protobuf field <code>bool ignore_empty_inputs = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIgnoreEmptyInputs($var)
    {
        GPBUtil::checkBool($var);
        $this->ignore_empty_inputs = $var;

        return $this;
    }

}

