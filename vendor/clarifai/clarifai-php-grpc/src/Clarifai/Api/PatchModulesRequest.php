<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/service.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PatchModulesRequest
 *
 * Generated from protobuf message <code>clarifai.api.PatchModulesRequest</code>
 */
class PatchModulesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     */
    protected $user_app_id = null;
    /**
     * Generated from protobuf field <code>repeated .clarifai.api.Module modules = 2;</code>
     */
    private $modules;
    /**
     * The action to perform on the patched objects
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the module image by setting
     * 'image.url' in the request to the current value returned for that module.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     */
    protected $action = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Clarifai\Api\UserAppIDSet $user_app_id
     *     @type array<\Clarifai\Api\Module>|\Google\Protobuf\Internal\RepeatedField $modules
     *     @type string $action
     *           The action to perform on the patched objects
     *           Supported values: 'overwrite' and 'remove'.
     *           Note that 'remove' can only be used to remove the module image by setting
     *           'image.url' in the request to the current value returned for that module.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @return \Clarifai\Api\UserAppIDSet|null
     */
    public function getUserAppId()
    {
        return $this->user_app_id;
    }

    public function hasUserAppId()
    {
        return isset($this->user_app_id);
    }

    public function clearUserAppId()
    {
        unset($this->user_app_id);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
     * @param \Clarifai\Api\UserAppIDSet $var
     * @return $this
     */
    public function setUserAppId($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\UserAppIDSet::class);
        $this->user_app_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .clarifai.api.Module modules = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getModules()
    {
        return $this->modules;
    }

    /**
     * Generated from protobuf field <code>repeated .clarifai.api.Module modules = 2;</code>
     * @param array<\Clarifai\Api\Module>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setModules($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Clarifai\Api\Module::class);
        $this->modules = $arr;

        return $this;
    }

    /**
     * The action to perform on the patched objects
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the module image by setting
     * 'image.url' in the request to the current value returned for that module.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     * @return string
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * The action to perform on the patched objects
     * Supported values: 'overwrite' and 'remove'.
     * Note that 'remove' can only be used to remove the module image by setting
     * 'image.url' in the request to the current value returned for that module.
     *
     * Generated from protobuf field <code>string action = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkString($var, True);
        $this->action = $var;

        return $this;
    }

}

