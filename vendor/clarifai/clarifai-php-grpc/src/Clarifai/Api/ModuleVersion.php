<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/resources.proto

namespace Clarifai\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A specific version of an app module that is available for assigning to apps.
 *
 * Generated from protobuf message <code>clarifai.api.ModuleVersion</code>
 */
class ModuleVersion extends \Google\Protobuf\Internal\Message
{
    /**
     * A name for this version like 1_0, 1_1_0, etc.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * The module this version belongs to.
     *
     * Generated from protobuf field <code>string module_id = 2;</code>
     */
    protected $module_id = '';
    /**
     * The app_id this module version belongs to.
     *
     * Generated from protobuf field <code>string app_id = 3;</code>
     */
    protected $app_id = '';
    /**
     * The user_id this module version belongs to.
     *
     * Generated from protobuf field <code>string user_id = 4;</code>
     */
    protected $user_id = '';
    /**
     * A short description for this version.
     *
     * Generated from protobuf field <code>string description = 6;</code>
     */
    protected $description = '';
    /**
     * A markdown formatted string to detailed description of the app module.
     * This is within each version so that it can be change version to version.
     *
     * Generated from protobuf field <code>string notes = 7;</code>
     */
    protected $notes = '';
    /**
     * When the app module version was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 8;</code>
     */
    protected $created_at = null;
    /**
     * When the app module version was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 9;</code>
     */
    protected $modified_at = null;
    /**
     * The code repo of the streamlit app.
     * If you are still developing your Module you should create a ModuleVersion
     * with an empty git_commit_url and then create an InstalledModuleVersion
     * with a pre-deployed deploy_url (such as localhost or streamlit cloud).
     * Once you are ready to create a production, create a new ModuleVersion with
     * the ready git url to a specific commit that you would like to be reviewed by the
     * Clarifai team for approval within our community. You cannot publish a ModuleVersion
     * is reviewed and approved. Please only provide the git_commit_url when you're
     * ready for a review. This url needs to include a specific commit, for example:
     * https://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555
     *
     * Generated from protobuf field <code>string git_commit_url = 10;</code>
     */
    protected $git_commit_url = '';
    /**
     * Generated from protobuf field <code>.clarifai.api.ModuleVersion.ModuleNav module_nav = 11;</code>
     */
    protected $module_nav = null;
    /**
     * A boolean to mark if Clarifai has approved this app version.
     * This cannot be set in the request to True.
     *
     * Generated from protobuf field <code>bool approved = 12;</code>
     */
    protected $approved = false;
    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     * Defaults to PRIVATE if not provided.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 13;</code>
     */
    protected $visibility = null;
    /**
     * To handle arbitrary json metadata you can use a struct field:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     * This is an optional arg.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 14;</code>
     */
    protected $metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           A name for this version like 1_0, 1_1_0, etc.
     *     @type string $module_id
     *           The module this version belongs to.
     *     @type string $app_id
     *           The app_id this module version belongs to.
     *     @type string $user_id
     *           The user_id this module version belongs to.
     *     @type string $description
     *           A short description for this version.
     *     @type string $notes
     *           A markdown formatted string to detailed description of the app module.
     *           This is within each version so that it can be change version to version.
     *     @type \Google\Protobuf\Timestamp $created_at
     *           When the app module version was created.
     *     @type \Google\Protobuf\Timestamp $modified_at
     *           When the app module version was last modified.
     *     @type string $git_commit_url
     *           The code repo of the streamlit app.
     *           If you are still developing your Module you should create a ModuleVersion
     *           with an empty git_commit_url and then create an InstalledModuleVersion
     *           with a pre-deployed deploy_url (such as localhost or streamlit cloud).
     *           Once you are ready to create a production, create a new ModuleVersion with
     *           the ready git url to a specific commit that you would like to be reviewed by the
     *           Clarifai team for approval within our community. You cannot publish a ModuleVersion
     *           is reviewed and approved. Please only provide the git_commit_url when you're
     *           ready for a review. This url needs to include a specific commit, for example:
     *           https://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555
     *     @type \Clarifai\Api\ModuleVersion\ModuleNav $module_nav
     *     @type bool $approved
     *           A boolean to mark if Clarifai has approved this app version.
     *           This cannot be set in the request to True.
     *     @type \Clarifai\Api\Visibility $visibility
     *           The visibility field represents whether this message is privately/publicly visible.
     *           To be visible to the public the App that contains it AND the User that contains the App must
     *           also be publicly visible.
     *           Defaults to PRIVATE if not provided.
     *     @type \Google\Protobuf\Struct $metadata
     *           To handle arbitrary json metadata you can use a struct field:
     *           https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     *           This is an optional arg.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Clarifai\Api\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * A name for this version like 1_0, 1_1_0, etc.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * A name for this version like 1_0, 1_1_0, etc.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The module this version belongs to.
     *
     * Generated from protobuf field <code>string module_id = 2;</code>
     * @return string
     */
    public function getModuleId()
    {
        return $this->module_id;
    }

    /**
     * The module this version belongs to.
     *
     * Generated from protobuf field <code>string module_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setModuleId($var)
    {
        GPBUtil::checkString($var, True);
        $this->module_id = $var;

        return $this;
    }

    /**
     * The app_id this module version belongs to.
     *
     * Generated from protobuf field <code>string app_id = 3;</code>
     * @return string
     */
    public function getAppId()
    {
        return $this->app_id;
    }

    /**
     * The app_id this module version belongs to.
     *
     * Generated from protobuf field <code>string app_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_id = $var;

        return $this;
    }

    /**
     * The user_id this module version belongs to.
     *
     * Generated from protobuf field <code>string user_id = 4;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * The user_id this module version belongs to.
     *
     * Generated from protobuf field <code>string user_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_id = $var;

        return $this;
    }

    /**
     * A short description for this version.
     *
     * Generated from protobuf field <code>string description = 6;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * A short description for this version.
     *
     * Generated from protobuf field <code>string description = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * A markdown formatted string to detailed description of the app module.
     * This is within each version so that it can be change version to version.
     *
     * Generated from protobuf field <code>string notes = 7;</code>
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * A markdown formatted string to detailed description of the app module.
     * This is within each version so that it can be change version to version.
     *
     * Generated from protobuf field <code>string notes = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setNotes($var)
    {
        GPBUtil::checkString($var, True);
        $this->notes = $var;

        return $this;
    }

    /**
     * When the app module version was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * When the app module version was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

    /**
     * When the app module version was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 9;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getModifiedAt()
    {
        return $this->modified_at;
    }

    public function hasModifiedAt()
    {
        return isset($this->modified_at);
    }

    public function clearModifiedAt()
    {
        unset($this->modified_at);
    }

    /**
     * When the app module version was last modified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified_at = 9;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setModifiedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->modified_at = $var;

        return $this;
    }

    /**
     * The code repo of the streamlit app.
     * If you are still developing your Module you should create a ModuleVersion
     * with an empty git_commit_url and then create an InstalledModuleVersion
     * with a pre-deployed deploy_url (such as localhost or streamlit cloud).
     * Once you are ready to create a production, create a new ModuleVersion with
     * the ready git url to a specific commit that you would like to be reviewed by the
     * Clarifai team for approval within our community. You cannot publish a ModuleVersion
     * is reviewed and approved. Please only provide the git_commit_url when you're
     * ready for a review. This url needs to include a specific commit, for example:
     * https://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555
     *
     * Generated from protobuf field <code>string git_commit_url = 10;</code>
     * @return string
     */
    public function getGitCommitUrl()
    {
        return $this->git_commit_url;
    }

    /**
     * The code repo of the streamlit app.
     * If you are still developing your Module you should create a ModuleVersion
     * with an empty git_commit_url and then create an InstalledModuleVersion
     * with a pre-deployed deploy_url (such as localhost or streamlit cloud).
     * Once you are ready to create a production, create a new ModuleVersion with
     * the ready git url to a specific commit that you would like to be reviewed by the
     * Clarifai team for approval within our community. You cannot publish a ModuleVersion
     * is reviewed and approved. Please only provide the git_commit_url when you're
     * ready for a review. This url needs to include a specific commit, for example:
     * https://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555
     *
     * Generated from protobuf field <code>string git_commit_url = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setGitCommitUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->git_commit_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ModuleVersion.ModuleNav module_nav = 11;</code>
     * @return \Clarifai\Api\ModuleVersion\ModuleNav|null
     */
    public function getModuleNav()
    {
        return $this->module_nav;
    }

    public function hasModuleNav()
    {
        return isset($this->module_nav);
    }

    public function clearModuleNav()
    {
        unset($this->module_nav);
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ModuleVersion.ModuleNav module_nav = 11;</code>
     * @param \Clarifai\Api\ModuleVersion\ModuleNav $var
     * @return $this
     */
    public function setModuleNav($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\ModuleVersion\ModuleNav::class);
        $this->module_nav = $var;

        return $this;
    }

    /**
     * A boolean to mark if Clarifai has approved this app version.
     * This cannot be set in the request to True.
     *
     * Generated from protobuf field <code>bool approved = 12;</code>
     * @return bool
     */
    public function getApproved()
    {
        return $this->approved;
    }

    /**
     * A boolean to mark if Clarifai has approved this app version.
     * This cannot be set in the request to True.
     *
     * Generated from protobuf field <code>bool approved = 12;</code>
     * @param bool $var
     * @return $this
     */
    public function setApproved($var)
    {
        GPBUtil::checkBool($var);
        $this->approved = $var;

        return $this;
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     * Defaults to PRIVATE if not provided.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 13;</code>
     * @return \Clarifai\Api\Visibility|null
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    public function hasVisibility()
    {
        return isset($this->visibility);
    }

    public function clearVisibility()
    {
        unset($this->visibility);
    }

    /**
     * The visibility field represents whether this message is privately/publicly visible.
     * To be visible to the public the App that contains it AND the User that contains the App must
     * also be publicly visible.
     * Defaults to PRIVATE if not provided.
     *
     * Generated from protobuf field <code>.clarifai.api.Visibility visibility = 13;</code>
     * @param \Clarifai\Api\Visibility $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Api\Visibility::class);
        $this->visibility = $var;

        return $this;
    }

    /**
     * To handle arbitrary json metadata you can use a struct field:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     * This is an optional arg.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 14;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    public function hasMetadata()
    {
        return isset($this->metadata);
    }

    public function clearMetadata()
    {
        unset($this->metadata);
    }

    /**
     * To handle arbitrary json metadata you can use a struct field:
     * https://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto
     * This is an optional arg.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 14;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->metadata = $var;

        return $this;
    }

}

